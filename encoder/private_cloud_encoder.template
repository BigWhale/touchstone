heat_template_version: 2013-05-23

description: |
  A template that establishes a Django webstack for Encoding media

parameters:

  image:
    description: Open Stack Cloud Server Image (Distribution)
    type: string
    default: saucy-image-heat
    constraints:
    - allowed_values:
      - saucy-image-heat
      description: Must be a valid Rackspace Cloud Server Image, default is saucy-image-heat

  rax_username:
    type: string
    description: RAX Public Cloud Username
    hidden: true

  rax_apikey:
    type: string
    description: RAX Public Cloud API Key
    hidden: true

  mysql_pass:
    type: string
    default: password123
    hidden: true
    description: MYSQL Root & RAX user password
  
  email:
    type: string
    description: Monitoring alert email address

  use_snet:
    type: string
    default: "true"
    description: Use the RAX Public Cloud Service Net
    constraints:
    - allowed_values:
      - "true"
      - "false"
      description: Must be relevant depending on your cloud environment

  branch:
    type: string
    default: master
    description: Repo branch to use
    constraints:
    - allowed_values:
      - master
      - dev
      description: Must be valid repo branch

  frontend_server_name:
    type: string
    default: frontend
    description: HTTP frontend server

  webapp_server_name:
    type: string
    default: webapp
    description: Django webapp

  data_master_server_name:
    type: string
    default: data-master
    description: Queue master

  data_worker1_server_name:
    type: string
    default: data-worker1
    description: Queue worker #1
    
resources:

  frontend_server:
    type: "OS::Nova::Server"
    properties:
      flavor: m1.medium
      image: { get_param: image }
      name: { get_param: frontend_server_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            apt-get update && apt-get install curl -y
            curl -skS -L https://raw.github.com/metral/touchstone/%branch%/encoder/server_userdata/frontend.sh | sudo bash /dev/stdin %webapp_ip% %branch%
          params:
            "%webapp_ip%": { get_attr: [ webapp_server, first_address ] }
            "%branch%": { get_param: branch }

  webapp_server:
    type: "OS::Nova::Server"
    properties:
      flavor: m1.medium
      image: { get_param: image }
      name: { get_param: webapp_server_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            apt-get update && apt-get install curl -y
            curl -skS -L https://raw.github.com/metral/touchstone/%branch%/encoder/server_userdata/webapp.sh | sudo bash /dev/stdin %rax_username% %rax_apikey% %data_master_ip% %mysql_pass% %use_snet% %branch%
          params:
            "%rax_username%": { get_param: rax_username }
            "%rax_apikey%": { get_param: rax_apikey }
            "%data_master_ip%": { get_attr: [ data_master_server, first_address ] }
            "%mysql_pass%": { get_param: mysql_pass }
            "%use_snet%": { get_param: use_snet }
            "%branch%": { get_param: branch }

  data_master_server:
    type: "OS::Nova::Server"
    properties:
      flavor: m1.medium
      image: { get_param: image }
      name: { get_param: data_master_server_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            apt-get update && apt-get install curl -y
            curl -skS -L https://raw.github.com/metral/touchstone/%branch%/encoder/server_userdata/data_master.sh | sudo bash /dev/stdin %mysql_pass% %branch%
          params:
            "%mysql_pass%": { get_param: mysql_pass }
            "%branch%": { get_param: branch }

  data_worker1_server:
    type: "OS::Nova::Server"
    properties:
      flavor: m1.medium
      image: { get_param: image }
      name: { get_param: data_worker1_server_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            apt-get update && apt-get install curl -y
            curl -skS -L https://raw.github.com/metral/touchstone/%branch%/encoder/server_userdata/data_worker.sh | sudo bash /dev/stdin %rax_username% %rax_apikey% %data_master_ip% %mysql_pass% %use_snet% %branch% %email%
          params:
            "%rax_username%": { get_param: rax_username }
            "%rax_apikey%": { get_param: rax_apikey }
            "%data_master_ip%": { get_attr: [ data_master_server, first_address ] }
            "%mysql_pass%": { get_param: mysql_pass }
            "%use_snet%": { get_param: use_snet }
            "%branch%": { get_param: branch }
            "%email%": { get_param: email }

outputs:

  frontend_url:
      value: { get_attr: [ frontend_server, first_address ] }
      description: The landing page url for the Encoder webapp
